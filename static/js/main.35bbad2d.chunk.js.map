{"version":3,"sources":["components/NavBar.jsx","components/HomeButton.jsx","components/Player.jsx","components/Field.jsx","containers/Home.jsx","data/play_moves.js","data/learn_plays.js","containers/LearnHome.jsx","components/NextButton.jsx","containers/LearnPlay.jsx","data/quiz_questions.js","containers/Quiz.jsx","containers/Glossary.jsx","containers/EndQuiz.jsx","App.js","index.js"],"names":["NavBar","Navbar","to","Brand","href","Collapse","className","Nav","Link","HomeButton","text","link","Button","variant","size","PlayerDiv","styled","div","props","highlight","top","left","Disc","Player","playerMoves","move","index","initialTop","initialLeft","firstMover","onClick","hasDisc","FieldWrap","EndzoneLine1","EndzoneLine2","timer","ms","Promise","res","setTimeout","Field","playData","useState","play","setPlay","forceUpdate","setValue","value","useForceUpdate","pass","tempPlay","players","discMove","a","i","moves","length","map","player","Home","Container","Row","Col","play_moves","getsDisc","plays","id","name","img","description","faqs","question","answer","LearnHome","plays_data","Card","Img","src","Body","Title","Wrap","Text","span","NextButton","forward","LearnPlay","useParams","fluid","faq","quiz_questions","options","explination","Image","Quiz","correctAnswers","setCorrectAnswers","history","useHistory","setQuestion","selected","setSelected","playerNum","setPlayerNum","correct","setCorrect","submitted","setSubmitted","Alert","questions","alt","option","active","type","onChange","e","target","push","main","Glossary","EndQuiz","App","basename","process","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35bbad2d.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport { Navbar, Nav } from 'react-bootstrap';\n\n\nconst NavBar = () => {\n    return (\n        <>\n          <Navbar>\n                <Link to=\"/\">\n                    <Navbar.Brand href=\"/\">Ultimate Frisbee Playbook</Navbar.Brand>\n                </Link>\n                <Navbar.Collapse className=\"justify-content-end\">\n                    <Link to=\"/learn\">\n                        <Nav.Link href=\"/\">Learn</Nav.Link>\n                    </Link>\n                    <Link to=\"/quiz\">\n                        <Nav.Link href=\"/\">Quiz</Nav.Link>\n                    </Link>\n                </Navbar.Collapse>\n            </Navbar>\n        </>\n    )\n}\n\nexport default NavBar;\n","import { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nconst HomeButton = ({text, link}) => {\n    return (\n        <Link to={link}>\n            <Button variant=\"success\" size=\"lg\">\n                {text}\n            </Button>\n        </Link>\n    )\n}\n\nexport default HomeButton;","import React from 'react';\nimport styled from 'styled-components';\n\nconst PlayerDiv = styled.div`\n    position: absolute;\n    width: 2rem;\n    height: 2rem;\n    border-radius: 50%;\n    background-color: red;\n    border: ${props => props.highlight ? '4px solid yellow' : 'none'};\n    top: ${props => `${props.top}rem`};\n    left: ${props => `${props.left}rem`};\n    transition: top 2s, left 2s;\n\n    text-align: center;\n`;\n\nconst Disc = styled.div`\n    position: absolute;\n    width: 1rem;\n    height: 0.5rem;\n    border-radius: 50%;\n    background-color: white;\n    top: ${props => `${props.top + 0.75}rem`};\n    left: ${props => `${props.left + 1.5}rem`};\n    transition: top 2s, left 2s;\n`;\n\nconst Player = ({playerMoves, move, index}) => {\n    return (\n        <>\n            <PlayerDiv top={playerMoves.initialTop} left={playerMoves.initialLeft} \n                highlight={playerMoves.firstMover} onClick={() => move(index)} />\n            {\n                playerMoves.hasDisc && (\n                    <Disc top={playerMoves.initialTop} left={playerMoves.initialLeft} />\n                )\n            }\n        </>\n    )\n};\n\nexport default Player;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Player from './Player';\n\nconst FieldWrap = styled.div`\n    width: 30rem;\n    height: 40rem;\n    background-color: green;\n`;\n\nconst EndzoneLine1 = styled.div`\n    position: absolute;\n    width: 30rem;\n    top: 5rem;\n    border-bottom: 1px solid white;\n`;\n\nconst EndzoneLine2 = styled.div`\n    position: absolute;\n    width: 30rem;\n    top: 35rem;\n    border-bottom: 1px solid white;\n`;\n\nconst timer = ms => new Promise(res => setTimeout(res, ms));\n\n//create your forceUpdate hook\nfunction useForceUpdate(){\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst Field = ({ playData }) => {\n    const [play, setPlay] = useState(playData);\n    const forceUpdate = useForceUpdate();\n\n    function pass() {\n        const tempPlay = play;\n\n        tempPlay.players[tempPlay.discMove[0]].hasDisc = false;\n        tempPlay.players[tempPlay.discMove[1]].hasDisc = true;\n        \n        setPlay(tempPlay);\n    }\n\n    const move = async (index) => {\n        const tempPlay = play;\n\n        tempPlay.players[index].firstMover = false;\n\n        setPlay(tempPlay);\n\n        for (var i = 0; i < tempPlay.players[index].moves.length; i++) {\n            pass();\n\n            tempPlay.players[index].initialTop = tempPlay.players[index].moves[i].top;\n            tempPlay.players[index].initialLeft = tempPlay.players[index].moves[i].left;\n            \n            setPlay(tempPlay);\n            forceUpdate();\n            await timer(2000);\n        }\n    };\n\n    return (\n        <FieldWrap>\n            <EndzoneLine1 />\n            {\n                play.players.map((player, index) => (\n                    <Player playerMoves={player} pass={pass} move={move} index={index} />\n                ))\n            }\n            <EndzoneLine2 />\n        </FieldWrap>\n    )\n};\n\nexport default Field;","import HomeButton from '../components/HomeButton';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Field from '../components/Field';\n\nconst Home = () => {\n    return (\n        <Container>\n            <Row className=\"text-center mt-5\">\n                <h1 className=\"m-auto\">Welcome to the Ultimate Frisbee Playbook!</h1>\n                <h3>Learn about 5 common frisbee plays, and take an interactive quiz to assess your knowledge</h3>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col className=\"text-center\">\n                    <HomeButton link=\"/learn\" text=\"Learn\" />\n                </Col>\n                <Col className=\"text-center\">\n                    <HomeButton link=\"/quiz\" text=\"Quiz\" />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Home;","const play_moves = {\n    \"Vertical Stack\": {\n        players: [\n            {\n                initialTop: 10,\n                initialLeft: 15,\n                moves: [\n                    {\n                        top: 15,\n                        left: 25\n                    },\n                    {\n                        top: 25,\n                        left: 15\n                    }\n                ],\n                firstMover: true,\n                hasDisc: false,\n                getsDisc: true\n            },\n            {\n                initialTop: 13,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 16,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 19,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 22,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 33,\n                initialLeft: 9,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 30,\n                initialLeft: 19,\n                moves: [],\n                firstMover: false,\n                hasDisc: true,\n                getsDisc: false\n            }\n        ],\n        discMove: [6, 0]\n    },\n    \"Horizontal Stack\": {\n        players: [\n            {\n                initialTop: 12,\n                initialLeft: 5,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: true\n            },\n            {\n                initialTop: 12,\n                initialLeft: 12,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 12,\n                initialLeft: 18,\n                moves: [\n                    {\n                        top: 25,\n                        left: 18\n                    }\n                ],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 12,\n                initialLeft: 25,\n                moves: [\n                    {\n                        top: 2,\n                        left: 25\n                    }\n                ],\n                firstMover: true,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 30,\n                initialLeft: 5,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 33,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 30,\n                initialLeft: 25,\n                moves: [],\n                firstMover: false,\n                hasDisc: true,\n                getsDisc: false\n            }\n            \n        ],\n        discMove: [6, 3]\n    },\n    \"Endzone Offense\": {\n        players: [\n            {\n                initialTop: 0,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: true\n            },\n            {\n                initialTop: 2.25,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 4.5,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 6.75,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 9,\n                initialLeft: 15,\n                moves: [\n                    {\n                        top: 2,\n                        left: 25\n                    }\n                ],\n                firstMover: true,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 20,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: true,\n                getsDisc: false\n            },\n            {\n                initialTop: 23,\n                initialLeft: 5,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            }\n            \n        ],\n        discMove: [5, 4]\n    },\n    \"Side Stack\": {\n        players: [\n            {\n                initialTop: 12,\n                initialLeft: 2,\n                moves: [\n                    {\n                        top: 18,\n                        left: 17\n                    },\n                    {\n                        top: 25,\n                        left: 15\n                    }\n                ],\n                firstMover: true,\n                hasDisc: false,\n                getsDisc: true\n            },\n            {\n                initialTop: 15,\n                initialLeft: 2,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 18,\n                initialLeft: 2,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 21,\n                initialLeft: 2,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 24,\n                initialLeft: 2,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 33,\n                initialLeft: 9,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 30,\n                initialLeft: 19,\n                moves: [],\n                firstMover: false,\n                hasDisc: true,\n                getsDisc: false\n            }\n            \n        ],\n        discMove: [6, 0]\n    },\n    \"Scallywag\": {\n        players: [\n            {\n                initialTop: 14,\n                initialLeft: 12,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: true\n            },\n            {\n                initialTop: 14,\n                initialLeft: 18,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 16,\n                initialLeft: 15,\n                moves: [\n                    {\n                        top: 3,\n                        left: 18\n                    }\n                ],\n                firstMover: true,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 19,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 22,\n                initialLeft: 15,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 33,\n                initialLeft: 9,\n                moves: [],\n                firstMover: false,\n                hasDisc: false,\n                getsDisc: false\n            },\n            {\n                initialTop: 30,\n                initialLeft: 19,\n                moves: [],\n                firstMover: false,\n                hasDisc: true,\n                getsDisc: false\n            }\n            \n        ],\n        discMove: [6, 2]\n    }\n};\n\nexport default play_moves;","import play_moves from \"./play_moves\";\n\nconst plays = [\n    {\n        id: \"1\",\n        name: \"Vertical Stack\",\n        img: \"https://ui-design-final.s3.amazonaws.com/vert-stack.png\",\n        description: `One by one, the receivers make their runs for a pass (cuts). For each \n            receiver to have an open space to cut into, the other five receivers have to stay out of the way. \n            Knowing who will cut and who will stay requires the players to have a good awareness of one another. \n            The simplest way of cutting is for the person on the front of the stack to cut first, and then the \n            second and so on until the disc is received.`,\n        faqs: [\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            }\n        ],\n        play_moves: play_moves[\"Vertical Stack\"]\n    },\n    {\n        id: \"2\",\n        name: \"Horizontal Stack\",\n        img: \"https://ui-design-final.s3.amazonaws.com/horizontal-stack.png\",\n        description: `Instead of setting up in a vertical line (the vertical stack), the Horizontal Stack \n            (a.k.a ‘ho stack’) has two horizontal lines, 3 handlers and 4 receivers up field. This creates passing \n            space in front and behind the receivers.`,\n        faqs: [\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            }\n        ],\n        play_moves: play_moves[\"Horizontal Stack\"]\n    },\n    {\n        id: \"3\",\n        name: \"Endzone Offense\",\n        img: \"https://ui-design-final.s3.amazonaws.com/endzone.png\",\n        description: `This play is used when we are close to the endzone. The 'iso' cuts away from the stack,\n            which is situated at the back of the endzone. This gives them space to recieve the disc in a \n            relatively tight area. Make sure to indicate who the 'iso' is as you set up this play.`,\n        faqs: [\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            }\n        ],\n        play_moves: play_moves[\"Endzone Offense\"]\n    },\n    {\n        id: \"4\",\n        name: \"Side Stack\",\n        img: \"https://ui-design-final.s3.amazonaws.com/side-stack.png\",\n        description: `The side stack is very similar to a vertical stack, but it is set up on the\n            side of the field to leave more space in the middle. The first cutter can either cut \n            deep on cut in towards the handlers.`,\n        faqs: [\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            }\n        ],\n        play_moves: play_moves[\"Side Stack\"]\n    },\n    {\n        id: \"5\",\n        name: \"Scallywag\",\n        img: \"https://ui-design-final.s3.amazonaws.com/scallywag.png\",\n        description: `Scallywag allows us to open up space for a regular cut or for a deep cut. The\n            back of the stack cuts in to either the open or the break side. The next person in \n            the stack cuts in to the opposite side. Third in the stack cuts deep as a continue \n            cut or deep look.\n        `,\n        faqs: [\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            },\n            {\n                question: \"Why is this useful?\",\n                answer: \"It organizes players to make sure one person has space to recieve the disc.\"\n            }\n        ],\n        play_moves: play_moves[\"Scallywag\"]\n    }\n];\n\nexport default plays;","import { Container, Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nimport plays_data from '../data/learn_plays';\n\n\nconst LearnHome = () => {\n    return (\n        <Container>\n            <Row className=\"mt-5\">\n                <h1>Click on a play to learn more!</h1>\n                <h4>Or go to the {\" \"}\n                    <Link to='/glossary'>\n                        glossary of terms\n                    </Link>\n                    {\" \"}to brush up on your ultimate terms!\n                </h4>\n            </Row>\n            <Row className=\"mt-5\">\n                {\n                    plays_data.map((play, index) => {\n                        return (\n                            <Col>\n                                <Link to={`/learn/${index}`}>\n                                    <Card className=\"m-auto\">\n                                        <Card.Img variant=\"top\" src={play.img} />\n                                        <Card.Body>\n                                            <Card.Title>{play.name}</Card.Title>\n                                        </Card.Body>\n                                    </Card>\n                                </Link>\n                            </Col>\n                        )\n                    })\n                }\n            </Row>\n\n        </Container>\n    )\n}\n\nexport default LearnHome;","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nconst Wrap = styled.div`\n    .hvr-icon-forward {\n        display: inline-block;\n        vertical-align: middle;\n        -webkit-transform: perspective(1px) translateZ(0);\n        transform: perspective(1px) translateZ(0);\n        box-shadow: 0 0 1px rgba(0, 0, 0, 0);\n        -webkit-transition-duration: 0.1s;\n        transition-duration: 0.1s;\n    }\n    .hvr-icon-forward .hvr-icon {\n        -webkit-transform: translateZ(0);\n        transform: translateZ(0);\n        -webkit-transition-duration: 0.1s;\n        transition-duration: 0.1s;\n        -webkit-transition-property: transform;\n        transition-property: transform;\n        -webkit-transition-timing-function: ease-out;\n        transition-timing-function: ease-out;\n    }\n    .hvr-icon-forward:hover .hvr-icon, .hvr-icon-forward:focus .hvr-icon, .hvr-icon-forward:active .hvr-icon {\n        -webkit-transform: translateX(4px);\n        transform: translateX(4px);\n    }\n\n    .hvr-icon-back {\n        display: inline-block;\n        vertical-align: middle;\n        -webkit-transform: perspective(1px) translateZ(0);\n        transform: perspective(1px) translateZ(0);\n        box-shadow: 0 0 1px rgba(0, 0, 0, 0);\n        -webkit-transition-duration: 0.1s;\n        transition-duration: 0.1s;\n    }\n    .hvr-icon-back .hvr-icon {\n        -webkit-transform: translateZ(0);\n        transform: translateZ(0);\n        -webkit-transition-duration: 0.1s;\n        transition-duration: 0.1s;\n        -webkit-transition-property: transform;\n        transition-property: transform;\n        -webkit-transition-timing-function: ease-out;\n        transition-timing-function: ease-out;\n    }\n    .hvr-icon-back:hover .hvr-icon, .hvr-icon-back:focus .hvr-icon, .hvr-icon-back:active .hvr-icon {\n        -webkit-transform: translateX(-4px);\n        transform: translateX(-4px);\n    }\n`;\n\nconst Text = styled.span`\n    margin: 0 1rem;\n`;\n\nconst NextButton = ({text, link, forward}) => {\n    return (\n        <Wrap>\n            <Link to={link}>\n                {\n                    forward ? (\n                        <Button variant=\"success\" className=\"hvr-icon-forward\">\n                            <Text>{text}</Text>\n                            <i className=\"fas fa-arrow-right hvr-icon\"></i>\n                        </Button>\n                    ): (\n                        <Button variant=\"success\" className=\"hvr-icon-back\">\n                            <i className=\"fas fa-arrow-left hvr-icon\"></i>\n                            <Text>{text}</Text>\n                        </Button>\n                    )\n                }\n            </Link>\n        </Wrap>\n    )\n}\n\nexport default NextButton;","import styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nimport NextButton from '../components/NextButton';\n\nimport plays_data from '../data/learn_plays';\nimport Field from '../components/Field';\n\nconst Image = styled.img`\n    width: 30rem;\n`;\n\nconst LearnPlay= () => {\n    const { id } = useParams();\n    const play = plays_data[id];\n\n    return (\n        <Container fluid>\n            <Row className=\"mt-3 px-5\">\n                <h2>{play.name}</h2>\n            </Row>\n            <Row className=\"mt-2 px-5\">\n                <Col>\n                    <h6>Click on the yellow highlighted dot to see the play in action!</h6>\n                    <Field playData={play.play_moves} />\n                </Col>\n                <Col>\n                    <h4>Description:</h4>\n                    <p>\n                        {play.description}\n                    </p>\n                    <h4>Frequently asked questions</h4>\n                    {\n                        play.faqs.map(faq => {\n                            return (\n                                <>\n                                    <strong>{faq.question}</strong>\n                                    <p>{faq.answer}</p>\n                                </>\n                            )\n                        })\n                    }\n                </Col>\n            </Row>\n            <Row className=\"mt-2 px-5\">\n                <NextButton link=\"/learn\" text=\"Back to Plays\" forward={false} />\n            </Row>\n        </Container>\n    )\n}\n\nexport default LearnPlay;","const quiz_questions = [\n    {\n        img: \"https://ui-design-final.s3.amazonaws.com/vert-stack-quiz.png\",\n        options: [\n            \"Horizontal Stack\",\n            \"Vertical Stack\",\n            \"Endzone Offense\",\n            \"Side Stack\"\n        ],\n        answer: \"Vertical Stack\",\n        firstMover: \"0\",\n        explination: `Vertical Stack is the most common offensive play in ultimate. \n            We use it to organize our offense and make space for players to recieve the disk.`\n    },\n    {\n        img: \"https://ui-design-final.s3.amazonaws.com/horizontal-stack-quiz.png\",\n        options: [\n            \"Vertical Stack\",\n            \"Side Stack\",\n            \"Endzone Offense\",\n            \"Horizontal Stack\",\n        ],\n        firstMover: \"3\",\n        answer: \"Horizontal Stack\",\n        explination: `Horizontal Stack creates passing space for the recievers.`\n    },\n    {\n        img: \"https://ui-design-final.s3.amazonaws.com/endzone-quiz.png\",\n        options: [\n            \"Vertical Stack\",\n            \"Side Stack\",\n            \"Endzone Offense\",\n            \"Horizontal Stack\",\n        ],\n        answer: \"Endzone Offense\",\n        firstMover: \"4\",\n        explination: `We use this play in a tight space in the endzone.`\n    },\n    {\n        img: \"https://ui-design-final.s3.amazonaws.com/side-stack-quiz.png\",\n        options: [\n            \"Horizontal Stack\",\n            \"Endzone Offense\",\n            \"Side Stack\",\n            \"Scallywag\"\n        ],\n        firstMover: \"0\",\n        answer: \"Side Stack\",\n        explination: `The side stack opens up most of the field for big cuts.`\n    },\n    {\n        img: \"https://ui-design-final.s3.amazonaws.com/scallywag-quiz.png\",\n        options: [\n            \"Horizontal Stack\",\n            \"Endzone Offense\",\n            \"Side Stack\",\n            \"Scallywag\"\n        ],\n        answer: \"Scallywag\",\n        firstMover: \"2\",\n        explination: `Scallywag makes space for deep cuts.`\n    }\n];\n\nexport default quiz_questions;","import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { Container, Row, Col, Button, Alert } from 'react-bootstrap';\nimport { useHistory } from \"react-router-dom\";\nimport questions from '../data/quiz_questions';\n\nconst Image = styled.img`\n    width: 30rem;\n`;\n\nconst Quiz= ({ correctAnswers, setCorrectAnswers }) => {\n    const history = useHistory();\n    const [question, setQuestion] = useState(0);\n    const [selected, setSelected] = useState(-1);\n    const [playerNum, setPlayerNum] = useState('');\n    const [correct, setCorrect] = useState(false);\n    const [submitted, setSubmitted] = useState(false);\n\n    const next = () => {\n        if(question + 1 < questions.length) {\n            setQuestion(question + 1);\n            setSelected(-1);\n            setSubmitted(false);\n        } else {\n            history.push(\"/quiz-end\");\n        }\n    };\n\n    const submit = () => {\n        setCorrect(selected === questions[question].answer && playerNum === questions[question].firstMover);\n        setPlayerNum('');\n        if(selected === questions[question].answer && playerNum === questions[question].firstMover) {\n            setCorrectAnswers(correctAnswers + 1);\n        }\n        setSubmitted(true);\n    };\n\n    return (\n        <Container fluid>\n            <Row className=\"mt-2 px-5\">\n                <h2>Quiz</h2>\n            </Row>\n            {\n                submitted && (\n                    <Alert variant={correct ? 'success' : 'danger'}>\n                        <strong>{correct ? 'Correct!' : 'Incorrect.'} \n                            This play is a {questions[question].answer}. \n                            Player {questions[question].firstMover} makes the first cut.\n                        </strong>\n                        <div>{questions[question].explination}</div>\n                    </Alert>\n                )\n            }\n            <Row className=\"mt-2 px-5\">\n                <Col>\n                    <Image src={questions[question].img} alt={questions[question]} />\n                </Col>\n                <Col className=\"text-center\">\n                    <h5>Match the image with the play name describing it</h5>\n                    {\n                        questions[question].options.map((option, index) => (\n                            <>\n                                <Button \n                                    className=\"my-3\"\n                                    variant=\"outline-dark\" \n                                    size=\"lg\"\n                                    onClick={() => setSelected(option)}\n                                    active={selected===option}\n                                >\n                                    {option}\n                                </Button>\n                                <br></br>\n                            </>\n                        ))\n                    }\n                    <h5 className=\"mt-4\">\n                        Which player cuts first? Enter their number here:\n                    </h5>\n                    <input \n                        type='text' \n                        value={playerNum}\n                        onChange={e => setPlayerNum(e.target.value)}\n                    />\n                </Col>\n            </Row>\n            <Row className=\"px-5 float-right\">\n                {\n                    submitted ? (\n                        <Button \n                            className=\"my-3\" \n                            variant=\"success\" \n                            size=\"lg\"\n                            onClick={() => next()}\n                        >\n                            Next Question\n                        </Button>\n                    ) : (\n                        <Button \n                            className=\"my-3\" \n                            variant=\"success\" \n                            size=\"lg\"\n                            onClick={() => submit()}\n                        >\n                            Submit\n                        </Button>\n                    )\n                }\n            </Row>\n        </Container>\n    )\n}\n\nexport default Quiz;","import styled from 'styled-components';\nimport NextButton from '../components/NextButton';\n\nconst Wrap = styled.main`\n    padding: 2rem 5rem;\n`;\n\nconst Glossary = () => {\n    return (\n        <Wrap>\n            <h3>Glossary of Ultimate Frisbee Terms</h3>\n            <p>Stack: A line of players ready to make cuts</p>\n            <p>Handler: Person who throws the disk</p>\n            <p>Cutter: Person who receives the disk</p>\n            <p>Cut: Sharp movement out to the spot in the field where the player expects to receive the disk</p>\n            <p>Force: Forcing means to make the opposing thrower throw a certain way. For example to force \n                backhand would mean to stand on their right side completely giving them the ability to backhand</p>\n            <p>Open Side: The side of the field that the handler can throw to (so the force)</p>\n            <p>Break Side: The side of the field that throws are being guarded against</p>\n            <p>Huck: A deep throw</p>\n            <div className=\"mt-5\">\n                <NextButton link=\"/learn\" text=\"Back to Learn\" forward={false} />\n            </div>\n        </Wrap>\n    )\n}\n\nexport default Glossary;","import HomeButton from '../components/HomeButton';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nconst EndQuiz = ({ correctAnswers }) => {\n    return (\n        <Container>\n            <Row className=\"text-center mt-5\">\n                <h1 className=\"m-auto\">Congratulations, you got {correctAnswers} plays correct.</h1>\n            </Row>\n\n            <Row className=\"mt-5\">\n                <Col className=\"text-center\">\n                    <HomeButton link=\"/learn\" text=\"Go back to review the plays\" />\n                </Col>\n                <Col className=\"text-center\">\n                    <HomeButton link=\"/quiz\" text=\"Take the quiz again\" />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default EndQuiz;","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport NavBar from './components/NavBar';\n\nimport Home from './containers/Home';\nimport LearnHome from './containers/LearnHome';\nimport LearnPlay from './containers/LearnPlay';\nimport Quiz from './containers/Quiz';\nimport Glossary from './containers/Glossary';\nimport EndQuiz from './containers/EndQuiz';\n\nfunction App() {\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n\n  return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <NavBar />\n        <Switch>\n            <Route exact path='/' component={Home} />\n            <Route exact path='/learn' component={LearnHome} />\n            <Route path='/learn/:id' component={LearnPlay} />\n            <Route exact path='/quiz'>\n              <Quiz correctAnswers={correctAnswers} setCorrectAnswers={setCorrectAnswers} />\n            </Route>\n            <Route exact path='/quiz-end'>\n              <EndQuiz correctAnswers={correctAnswers} />\n            </Route>\n            <Route exact path='/glossary' component={Glossary} />\n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}